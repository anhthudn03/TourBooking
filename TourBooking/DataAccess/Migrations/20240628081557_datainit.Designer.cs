// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(TourBookingContext))]
    [Migration("20240628081557_datainit")]
    partial class datainit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccess.Entites.ChiTietTour", b =>
                {
                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.Property<double>("GiaMoiNguoi")
                        .HasColumnType("float");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiKhoiHanh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhuongTien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuongNguoi")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongTrong")
                        .HasColumnType("int");

                    b.Property<double>("TongGia")
                        .HasColumnType("float");

                    b.HasKey("TourId");

                    b.ToTable("ChiTietTour");
                });

            modelBuilder.Entity("DataAccess.Entites.DiaDiem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("NguoiSua")
                        .HasColumnType("int");

                    b.Property<int>("NguoiTao")
                        .HasColumnType("int");

                    b.Property<string>("TenDiaDiem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NguoiTao");

                    b.ToTable("DiaDiem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiaChi = "Paris, France",
                            MoTa = "City of Love",
                            NgaySua = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6082),
                            NgayTao = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6081),
                            NguoiSua = 0,
                            NguoiTao = 1,
                            TenDiaDiem = "Paris",
                            TrangThai = "Active"
                        },
                        new
                        {
                            Id = 2,
                            DiaChi = "Tokyo, Japan",
                            MoTa = "Vibrant Metropolis",
                            NgaySua = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6085),
                            NgayTao = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6084),
                            NguoiSua = 0,
                            NguoiTao = 1,
                            TenDiaDiem = "Tokyo",
                            TrangThai = "Active"
                        },
                        new
                        {
                            Id = 3,
                            DiaChi = "New York, USA",
                            MoTa = "The Big Apple",
                            NgaySua = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6088),
                            NgayTao = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6087),
                            NguoiSua = 0,
                            NguoiTao = 1,
                            TenDiaDiem = "New York",
                            TrangThai = "Active"
                        });
                });

            modelBuilder.Entity("DataAccess.Entites.DiaDiemTour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DiaDiemId")
                        .HasColumnType("int");

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DiaDiemId");

                    b.HasIndex("TourId");

                    b.ToTable("DiaDiemTour");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiaDiemId = 1,
                            TourId = 1,
                            TrangThai = "ACTIVE"
                        },
                        new
                        {
                            Id = 2,
                            DiaDiemId = 2,
                            TourId = 2,
                            TrangThai = "ACTIVE"
                        },
                        new
                        {
                            Id = 3,
                            DiaDiemId = 3,
                            TourId = 3,
                            TrangThai = "ACTIVE"
                        });
                });

            modelBuilder.Entity("DataAccess.Entites.GioHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TourId");

                    b.HasIndex("UserId");

                    b.ToTable("GioHang");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NgaySua = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6208),
                            NgayTao = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6207),
                            TourId = 1,
                            TrangThai = "Confirmed",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            NgaySua = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6210),
                            NgayTao = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6209),
                            TourId = 2,
                            TrangThai = "Pending",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            NgaySua = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6212),
                            NgayTao = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6211),
                            TourId = 3,
                            TrangThai = "Confirmed",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("DataAccess.Entites.HinhKhachSan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KhachSanId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KhachSanId");

                    b.ToTable("HinhKhachSan");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KhachSanId = 1,
                            Url = "https://example.com/paris_hotel.jpg"
                        },
                        new
                        {
                            Id = 2,
                            KhachSanId = 2,
                            Url = "https://example.com/tokyo_hotel.jpg"
                        },
                        new
                        {
                            Id = 3,
                            KhachSanId = 3,
                            Url = "https://example.com/nyc"
                        });
                });

            modelBuilder.Entity("DataAccess.Entites.HinhTour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TourId");

                    b.ToTable("HinhTour");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TourId = 1,
                            Url = "https://example.com/eiffel.jpg"
                        },
                        new
                        {
                            Id = 2,
                            TourId = 2,
                            Url = "https://example.com/sushi.jpg"
                        },
                        new
                        {
                            Id = 3,
                            TourId = 3,
                            Url = "https://example.com/broadway.jpg"
                        });
                });

            modelBuilder.Entity("DataAccess.Entites.HuongDanVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoVaTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("NguoiSua")
                        .HasColumnType("int");

                    b.Property<int>("NguoiTao")
                        .HasColumnType("int");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VeId");

                    b.ToTable("HuongDanVien");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john@example.com",
                            HoVaTen = "John Doe",
                            NgaySua = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6236),
                            NgayTao = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6235),
                            NguoiSua = 0,
                            NguoiTao = 0,
                            SDT = "1112223333",
                            TrangThai = "Available"
                        },
                        new
                        {
                            Id = 2,
                            Email = "jane@example.com",
                            HoVaTen = "Jane Smith",
                            NgaySua = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6239),
                            NgayTao = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6238),
                            NguoiSua = 0,
                            NguoiTao = 0,
                            SDT = "4445556666",
                            TrangThai = "Available"
                        },
                        new
                        {
                            Id = 3,
                            Email = "mike@example.com",
                            HoVaTen = "Mike Johnson",
                            NgaySua = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6241),
                            NgayTao = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6240),
                            NguoiSua = 0,
                            NguoiTao = 0,
                            SDT = "7778889999",
                            TrangThai = "Busy"
                        });
                });

            modelBuilder.Entity("DataAccess.Entites.KhachSan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("NguoiSua")
                        .HasColumnType("int");

                    b.Property<int>("NguoiTao")
                        .HasColumnType("int");

                    b.Property<int>("SoPhong")
                        .HasColumnType("int");

                    b.Property<string>("TenKhachSan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NguoiTao");

                    b.ToTable("KhachSan");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiaChi = "1 Champs-Élysées, Paris",
                            MoTa = "5-star hotel in the heart of Paris",
                            NgaySua = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6264),
                            NgayTao = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6262),
                            NguoiSua = 0,
                            NguoiTao = 1,
                            SoPhong = 200,
                            TenKhachSan = "Luxury Paris KhachSan",
                            TrangThai = "Open"
                        },
                        new
                        {
                            Id = 2,
                            DiaChi = "1-1-1 Shibuya, Tokyo",
                            MoTa = "Modern hotel with a view of Tokyo skyline",
                            NgaySua = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6267),
                            NgayTao = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6266),
                            NguoiSua = 0,
                            NguoiTao = 1,
                            SoPhong = 300,
                            TenKhachSan = "Tokyo Skyline KhachSan",
                            TrangThai = "Open"
                        },
                        new
                        {
                            Id = 3,
                            DiaChi = "5th Avenue, New York",
                            MoTa = "Iconic New York hotel",
                            NgaySua = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6269),
                            NgayTao = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6268),
                            NguoiSua = 0,
                            NguoiTao = 1,
                            SoPhong = 400,
                            TenKhachSan = "New York Plaza",
                            TrangThai = "Open"
                        });
                });

            modelBuilder.Entity("DataAccess.Entites.LoaiTour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("NguoiSua")
                        .HasColumnType("int");

                    b.Property<int>("NguoiTao")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiTour");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NgaySua = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6315),
                            NgayTao = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6314),
                            NguoiSua = 0,
                            NguoiTao = 0,
                            Ten = "Adventure Tours",
                            TrangThai = "Active"
                        },
                        new
                        {
                            Id = 2,
                            NgaySua = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6317),
                            NgayTao = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6317),
                            NguoiSua = 0,
                            NguoiTao = 0,
                            Ten = "Cultural Tours",
                            TrangThai = "Active"
                        },
                        new
                        {
                            Id = 3,
                            NgaySua = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6319),
                            NgayTao = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6319),
                            NguoiSua = 0,
                            NguoiTao = 0,
                            Ten = "Beach Vacations",
                            TrangThai = "Active"
                        },
                        new
                        {
                            Id = 4,
                            NgaySua = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6321),
                            NgayTao = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6320),
                            NguoiSua = 0,
                            NguoiTao = 0,
                            Ten = "City Breaks",
                            TrangThai = "Active"
                        });
                });

            modelBuilder.Entity("DataAccess.Entites.RefreshToken", b =>
                {
                    b.Property<int>("RefreshTokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RefreshTokenId"));

                    b.Property<DateTime>("ExpriedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssuedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("JwtId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RefreshTokenId");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("DataAccess.Entites.Tour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("GiaTour")
                        .HasColumnType("float");

                    b.Property<int>("KhachSanId")
                        .HasColumnType("int");

                    b.Property<int>("LoaiTuorId")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayKhoiHanh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("NguoiSua")
                        .HasColumnType("int");

                    b.Property<int>("NguoiTao")
                        .HasColumnType("int");

                    b.Property<string>("SoNgay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KhachSanId");

                    b.HasIndex("LoaiTuorId");

                    b.HasIndex("NguoiTao");

                    b.ToTable("Tour");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GiaTour = 100.0,
                            KhachSanId = 1,
                            LoaiTuorId = 1,
                            MoTa = "Explore the iconic Eiffel Tower",
                            NgayKhoiHanh = new DateTime(2024, 7, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6117),
                            NgaySua = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6116),
                            NgayTao = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6116),
                            NguoiSua = 0,
                            NguoiTao = 1,
                            SoNgay = "1",
                            TenTour = "Eiffel Tower Adventure",
                            TrangThai = "Available"
                        },
                        new
                        {
                            Id = 2,
                            GiaTour = 150.0,
                            KhachSanId = 2,
                            LoaiTuorId = 2,
                            MoTa = "Taste the best sushi in Tokyo",
                            NgayKhoiHanh = new DateTime(2024, 8, 12, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6126),
                            NgaySua = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6125),
                            NgayTao = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6125),
                            NguoiSua = 0,
                            NguoiTao = 1,
                            SoNgay = "2",
                            TenTour = "Tokyo Sushi Experience",
                            TrangThai = "Available"
                        },
                        new
                        {
                            Id = 3,
                            GiaTour = 200.0,
                            KhachSanId = 3,
                            LoaiTuorId = 3,
                            MoTa = "Enjoy a Broadway musical in New York",
                            NgayKhoiHanh = new DateTime(2024, 8, 27, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6129),
                            NgaySua = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6128),
                            NgayTao = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(6128),
                            NguoiSua = 0,
                            NguoiTao = 1,
                            SoNgay = "3",
                            TenTour = "NYC Broadway Show",
                            TrangThai = "Available"
                        });
                });

            modelBuilder.Entity("DataAccess.Entites.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChucVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoVaTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDangNHap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChucVu = "User",
                            DiaChi = "123 User St",
                            Email = "admin@example.com",
                            HoVaTen = "User User",
                            MatKhau = "admin123",
                            NgaySinh = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgaySua = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(5841),
                            NgayTao = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(5829),
                            SDT = "1234567890",
                            TenDangNHap = "admin",
                            TrangThai = "Active"
                        },
                        new
                        {
                            Id = 2,
                            ChucVu = "User",
                            DiaChi = "456 User Ave",
                            Email = "user1@example.com",
                            HoVaTen = "Regular User",
                            MatKhau = "user123",
                            NgaySinh = new DateTime(1995, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgaySua = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(5847),
                            NgayTao = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(5847),
                            SDT = "9876543210",
                            TenDangNHap = "user1",
                            TrangThai = "Active"
                        },
                        new
                        {
                            Id = 3,
                            ChucVu = "Guide",
                            DiaChi = "789 Guide Rd",
                            Email = "guide1@example.com",
                            HoVaTen = "Tour Guide",
                            MatKhau = "guide123",
                            NgaySinh = new DateTime(1988, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgaySua = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(5850),
                            NgayTao = new DateTime(2024, 6, 28, 15, 15, 57, 160, DateTimeKind.Local).AddTicks(5850),
                            SDT = "5555555555",
                            TenDangNHap = "guide1",
                            TrangThai = "Active"
                        });
                });

            modelBuilder.Entity("DataAccess.Entites.Ve", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoVaTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NguoiSua")
                        .HasColumnType("int");

                    b.Property<string>("PTTT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoNguoi")
                        .HasColumnType("int");

                    b.Property<double>("TongTien")
                        .HasColumnType("float");

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TourId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Ve");
                });

            modelBuilder.Entity("DataAccess.Entites.ChiTietTour", b =>
                {
                    b.HasOne("DataAccess.Entites.Tour", "Tour")
                        .WithOne("ChiTietTour")
                        .HasForeignKey("DataAccess.Entites.ChiTietTour", "TourId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("DataAccess.Entites.DiaDiem", b =>
                {
                    b.HasOne("DataAccess.Entites.User", "User")
                        .WithMany()
                        .HasForeignKey("NguoiTao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccess.Entites.DiaDiemTour", b =>
                {
                    b.HasOne("DataAccess.Entites.DiaDiem", "DiaDiem")
                        .WithMany()
                        .HasForeignKey("DiaDiemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DataAccess.Entites.Tour", "Tour")
                        .WithMany()
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DiaDiem");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("DataAccess.Entites.GioHang", b =>
                {
                    b.HasOne("DataAccess.Entites.Tour", "Tour")
                        .WithMany()
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entites.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tour");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccess.Entites.HinhKhachSan", b =>
                {
                    b.HasOne("DataAccess.Entites.KhachSan", "KhachSan")
                        .WithMany()
                        .HasForeignKey("KhachSanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachSan");
                });

            modelBuilder.Entity("DataAccess.Entites.HinhTour", b =>
                {
                    b.HasOne("DataAccess.Entites.Tour", "Tour")
                        .WithMany()
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("DataAccess.Entites.HuongDanVien", b =>
                {
                    b.HasOne("DataAccess.Entites.Ve", "Ve")
                        .WithMany()
                        .HasForeignKey("VeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Ve");
                });

            modelBuilder.Entity("DataAccess.Entites.KhachSan", b =>
                {
                    b.HasOne("DataAccess.Entites.User", "User")
                        .WithMany()
                        .HasForeignKey("NguoiTao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccess.Entites.RefreshToken", b =>
                {
                    b.HasOne("DataAccess.Entites.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccess.Entites.Tour", b =>
                {
                    b.HasOne("DataAccess.Entites.KhachSan", "KhachSan")
                        .WithMany()
                        .HasForeignKey("KhachSanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entites.LoaiTour", "LoaiTour")
                        .WithMany()
                        .HasForeignKey("LoaiTuorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entites.User", "User")
                        .WithMany()
                        .HasForeignKey("NguoiTao")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("KhachSan");

                    b.Navigation("LoaiTour");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccess.Entites.Ve", b =>
                {
                    b.HasOne("DataAccess.Entites.Tour", "Tour")
                        .WithOne()
                        .HasForeignKey("DataAccess.Entites.Ve", "TourId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DataAccess.Entites.User", "User")
                        .WithOne()
                        .HasForeignKey("DataAccess.Entites.Ve", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tour");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccess.Entites.Tour", b =>
                {
                    b.Navigation("ChiTietTour");
                });
#pragma warning restore 612, 618
        }
    }
}
